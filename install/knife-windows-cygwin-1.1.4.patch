--- knife-windows-1.1.4/lib/chef/knife/bootstrap_windows_base.rb	2016-01-17 09:56:09.290955029 -0500
+++ knife-windows-1.1.4-morepatched/lib/chef/knife/bootstrap_windows_base.rb	2016-01-17 19:31:21.258876191 -0500
@@ -324,7 +324,11 @@
         # we have to run the remote commands in 2047 char chunks
         create_bootstrap_bat_command do |command_chunk|
           begin
-            render_command_result = run_command(command_chunk)
+            render_command = command_chunk
+            if locate_config_value(:cygwin)
+              render_command = %q!cd $TEMP && !+command_chunk
+            end
+            render_command_result = run_command(render_command)
             ui.error("Batch render command returned #{render_command_result}") if render_command_result != 0
             render_command_result
           rescue SystemExit => e
@@ -346,11 +350,20 @@
       end
 
       def bootstrap_command
+        if locate_config_value(:cygwin)
+          @bootstrap_command ||= "cd $TEMP && cmd.exe /C #{bootstrap_bat_file}"
+        else
         @bootstrap_command ||= "cmd.exe /C #{bootstrap_bat_file}"
       end
+        @bootstrap_command
+      end
 
       def bootstrap_render_banner_command(chunk_num)
-        "cmd.exe /C echo Rendering #{bootstrap_bat_file} chunk #{chunk_num}"
+        if locate_config_value(:cygwin)
+          return "echo 'Rendering #{bootstrap_bat_file} chunk #{chunk_num}'"
+        else
+          return "cmd.exe /C echo Rendering #{bootstrap_bat_file} chunk #{chunk_num}"
+        end
       end
 
       def escape_windows_batch_characters(line)
@@ -363,11 +376,18 @@
         bootstrap_bat = ""
         banner = bootstrap_render_banner_command(chunk_num += 1)
         render_template(load_template(config[:bootstrap_template])).each_line do |line|
-          escape_windows_batch_characters(line)
           # We are guaranteed to have a prefix "banner" command that echo's chunk number.  We can
           # confidently prefix every actual command with &&.
           # TODO: Why does ^\n&& work directly through the commandline but not through SOAP?
+          if locate_config_value(:cygwin)
+            render_line = ""
+            if !line.nil? and !line.chomp.strip.nil?
+              render_line = " && echo '#{line.chomp.strip.gsub(/'/, '\'\\\\\1\'\'')}' >> #{bootstrap_bat_file}"
+            end
+          else
+            escape_windows_batch_characters(line)
           render_line = " && >> #{bootstrap_bat_file} (echo.#{line.chomp.strip})"
+          end
           # Windows commands are limited to 8191 characters for machines running XP or higher but
           # this includes the length of environment variables after they have been expanded.
           # Since we don't actually know how long %TEMP% (and it's used twice - once in the banner
@@ -394,8 +414,12 @@
       end
 
       def bootstrap_bat_file
+        if locate_config_value(:cygwin)
+          @bootstrap_bat_file ||= "\"bootstrap-#{Process.pid}-#{Time.now.to_i}.bat\""
+        else
         @bootstrap_bat_file ||= "\"%TEMP%\\bootstrap-#{Process.pid}-#{Time.now.to_i}.bat\""
       end
+      end
 
       def warn_chef_config_secret_key
         ui.info "* " * 40
