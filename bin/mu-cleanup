#!/usr/local/ruby-current/bin/ruby
#
# Copyright:: Copyright (c) 2014 eGlobalTech, Inc., all rights reserved
#
# Licensed under the BSD-3 license (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License in the root of the project or at
#
#     http://egt-labs.com/mu/LICENSE.html
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require File.expand_path(File.dirname(__FILE__))+"/mu-load-murc.rb"

require 'rubygems'
require 'bundler/setup'
require 'trollop'
require 'mu'
Dir.chdir(MU.installDir)

$opts = Trollop::options do
	banner <<-EOS
Usage:
#{$0} [-f] [-i] [-n] [-s] [-o] [-w] [-v] <deploy_id>
  EOS
  opt :force, "Force termination of instances", :default => false, :type => :boolean
  opt :ignoremaster, "Ignore the MU-MASTER-IP tag when identifying resources to terminate. Caution- this can result in accidentally terminating someone else's resources.", :default => false, :type => :boolean
  opt :noop, "Don't actually do anything, just show what we would do", :default => false, :type => :boolean
  opt :skipsnapshots, "Skip creation of final snapshots for EBS volumes and RDS instances.", :default => false, :type => :boolean
	opt :onlycloud, "Only purge cloud resources, and skip all Mu master metadata cleanup.", :require => false, :default => false, :type => :boolean
	opt :web, "Generate web-friendly (HTML) output.", :require => false, :default => false, :type => :boolean
	opt :capid, "[DEPRECATED] Deploy id to remove", :require => false, :default => false, :type => :boolean
	opt :verbose, "Display debugging output", :require => false, :default => false, :type => :boolean
end

MU.setLogging($opts[:verbose], $opts[:web])
$opts[:deploy] = $opts[:capid] if $opts[:capid]

if (!ARGV[0] or ARGV[0].empty?) and !$opts[:deploy]
	MU.log("You must specify a deploy id!", MU::ERR, html: $opts[:web])
	exit 1
else
	$opts[:deploy] = ARGV[0]
end


MU::Cleanup.run(
	$opts[:deploy],
	$opts[:force],
	$opts[:noop],
	$opts[:skipsnapshots],
	$opts[:onlycloud],
	$opts[:verbose],
	$opts[:web],
	$opts[:ignoremaster]
)
