<%

    # Specify DB Creation Style. We can't do this kind of intra-parameter logic
    # in the `parameters` section (yet).
    $db_creationstyle="new" if !$db_creationstyle
    if $db_creationstyle != "new"
      raise ArgumentError, 'You must specify dbvault' if $dbvault.nil?
      raise ArgumentError, 'You must specify dbvaultitem' if $dbvaultitem.nil?
      raise ArgumentError, 'You must specify dbid' if $dbid.nil?
    end


%>

---
appname: <%= appname %>
region: <%= region %>
parameters:
  - name: nat_ssh_user
    default: root
  - name: region
    default: us-east-1
  - name: appname
    default: demo
  - name: instance_type
    default: t2.micro
  - name: vpc_deploy_id
    required: false
    description: The Mu deploy identifier for an existing deploy with a single VPC, into which we'll attempt to insert this deployment.
  - name: vpc_id
    cloudtype: AWS::EC2::VPC::Id
    description: A simple VPC cloud id into which we'll attempt to insert this deployment.
    default: <%= MU.myVPC %>
<% if !vpc_deploy_id and (!vpc or vpc.empty?) then %>
vpcs:
- name: "vpc"
  route-tables:
  - name: internet
    routes:
    - destination_network: 0.0.0.0/0
      gateway: #INTERNET
  - name: private
    routes:
    - destination_network: 0.0.0.0/0
      nat_host_name: "bastion"
  dependencies:
  - type: server
    name: "bastion"
  subnets:
<%
$azs = MU::Cloud::AWS.listAZs
$azs.each.with_index { |az, i|
%>
  - name: Public<%= i %>
    ip_block: 10.0.<%= i %>.0/24
    availability-zone: <%= az %>
    route-table: internet
<%
}
offset = $azs.size
$azs.each.with_index { |az, i|
%>
  - name: Private<%= i %>
    ip_block: 10.0.<%= i + offset %>.0/24
    availability-zone: <%= az %>
    route-table: private
<%
}
%>
<% end %>
loadbalancers:
- name: "lb"
  vpc:
    vpc_name: "vpc"
    <% if vpc_deploy_id %>
    deploy_id: <%= vpc_deploy_id %>
    <% elsif vpc_id %>
    vpc_id: <%= vpc_id %>
    <% end %>
  ingress_rules:
  - port: 80
    hosts:
    - 0.0.0.0/0
  healthcheck:
   target: HTTP:80/heartbeat.php
   timeout: 5
   interval: 30
   unhealthy-threshold: 2
   healthy-threshold: 2
  listeners:
  - lb-port: 80
    lb-protocol: HTTP
    instance-port: 80
    instance-protocol: HTTP
databases:
- name: "db"
  creation_style: "<%=$db_creationstyle %>"
  create_read_replica: false
  <% if $db_creationstyle != "new" %>
  identifier: "<%=$dbid%>"
  auth_vault:
    vault: "<%=dbvault %>"
    item: "<%=dbvaultitem %>"
  <% end %>
  db_family: mysql5.6
  engine: mysql
  port: 3306
  size: db.t2.micro
  storage: 5
  engine_version: 5.6.23
  vpc: 
    vpc_name: "vpc"
    <% if vpc_deploy_id %>
    deploy_id: <%=vpc_deploy_id %>
    <% elsif vpc_id %>
    vpc_id: <%= vpc_id %>
    <% end %>
  add_firewall_rules:
  - rule_name: "database_secgroup"
servers:
  <% if !vpc_deploy_id and (!vpc or vpc.empty?) then %>
  - name: "bastion"
    ssh_user: "root"
    size: "t2.micro"
    skipinitialupdates: true
    src-dst-check: false
    static_ip: 
      assign_ip: true
    vpc: 
      vpc_name: "vpc"
      subnet_pref: "public"
    ingress_rules: 
    - proto: "icmp"
      hosts: 
      - "10.0.0.0/16"
    - proto: "tcp"
      port-range: "1-65535"
      hosts: 
      - "10.0.0.0/16"
    - proto: "udp"
      port-range: "1-65535"
      hosts: 
      - "10.0.0.0/16"
    run_list: 
    - "recipe[mu-utility::nat]"
  <% end %>
  - name: "wpress"
    loadbalancers:
    - concurrent-load-balancer: "lb"
    size: t2.medium
    storage:
    - device: /dev/sda1
      size: 70
    vpc:
      vpc_name: "vpc"
      subnet_pref: private
      nat_host_name: "bastion"
      nat_ssh_user: <%= nat_ssh_user %>
      <% if vpc_deploy_id %>
      deploy_id: <%=vpc_deploy_id %>
      <% elsif vpc_id %>
      vpc_id: <%= vpc_id %>
      <% end %>
    dependencies:
    - type: loadbalancer
      name: "lb"
    - type: database
      name: "db"
    <% if !vpc_deploy_id and (!vpc or vpc.empty?) %>
    - type: "server"
      name: "bastion"
      phase: "groom"
    <% end %>
    add_firewall_rules:
      - rule_name: "wpress_secgroup"
    run_list:
    - recipe[demo::wordpress]

server_pools:
  - name: "wpressbase"
    min-size: 1
    max-size: 1
    ssh_user: "root"
    skipinitialupdates: true
    loadbalancers: 
    - concurrent-load-balancer: "lb"
    add_firewall_rules: 
      - rule_name: "wpress_secgroup"
    vpc:
      vpc_name: "vpc"
      subnet_pref: all_private
      nat_host_name: "bastion"
      nat_ssh_user: <%= nat_ssh_user %>
      <% if vpc_deploy_id %>
      deploy_id: <%=vpc_deploy_id %>
      <% elsif vpc_id %>
      vpc_id: <%= vpc_id %>
      <% end %>
    run_list: 
    - recipe[demo::wordpress]
    dependencies: 
    - name: "lb"
      type: "loadbalancer"
    - name: "db"
      type: "database"
    basis: 
      launch-config: 
        name: "wpress-launch"
        size: "t2.medium"
        server: "wpress"
firewall_rules:
  - name: "database_secgroup"
    vpc:
      <% if vpc_deploy_id %>
      deploy_id: <%=vpc_deploy_id %>
      <% elsif vpc_id %>
      vpc_id: <%= vpc_id %>
      <% else %>
      vpc_name: vpc
      <% end %>
    rules: 
    - port: 3306
      sgs: 
      - "wpress_secgroup"
  - name: "wpress_secgroup"
    vpc:
      <% if vpc_deploy_id %>
      deploy_id: <%=vpc_deploy_id %>
      <% elsif vpc_id %>
      vpc_id: <%= vpc_id %>
      <% else %>
      vpc_name: vpc
      <% end %>
    rules: 
    - port: 80
      lbs: 
      - "lb"
    dependencies: 
    - type: "loadbalancer"
      name: "lb"
